#Reference: https://www.smarthomebeginner.com/docker-home-media-server-2018-basic
#Requirement: Set environmental variables: USERDIR, PUID, PGID, MYSQL_ROOT_PASSWORD, and TZ as explained in the reference.

version: "3.6"
services:

######### FRONTENDS ##########

 #Portainer - WebUI for Containers
  # portainer:
  #   image: portainer/portainer
  #   hostname: portainer
  #   container_name: portainer
  #   restart: on-failure:5
  #   command: -H unix:///var/run/docker.sock
  #   ports:
  #     - "9000:9000"
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #     - ${USERDIR}/portainer/data:/data
  #     - ${USERDIR}/portainer/shared:/shared
  #   environment:
  #     TZ: ${TZ}
  #     VIRTUAL_HOST:  \
  #     LETSENCRYPT_HOST:  \
  #     LETSENCRYPT_EMAIL: somename@email.com \
  #     LETSENCRYPT_TEST: "true"


# Organizer - Unified HTPC/Home Server Web Interface
  # organizr:
  #   container_name: organizr
  #   hostname: organizr
  #   restart: on-failure:5
  #   image: lsiocommunity/organizr
  #   volumes:
  #     - ${USERDIR}/organizr:/config
  #     - ${USERDIR}/organizr/shared:/shared
  #   ports:
  #     - "8999:80"
  #   environment:
  #     PUID: ${PUID}
  #     PGID: ${PGID}
  #     TZ: ${TZ}
  #     VIRTUAL_HOST:  \
  #     LETSENCRYPT_HOST: \
  #     LETSENCRYPT_EMAIL: somename@email.com \
  #     LETSENCRYPT_TEST: "true"

# WebUI for MariaDB
  # phpmyadmin:
  #   hostname: phpmyadmin
  #   container_name: phpmyadmin
  #   image: phpmyadmin/phpmyadmin
  #   restart: on-failure:5
  #   links:
  #     - mariadb:db
  #   ports:
  #     - "8880:80"
  #   environment:
  #     - PMA_HOST=mariadb
  #     - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}

######### DOCKER RELATED ##########

# Watchtower - Automatic Update of Containers/Apps
  # watchtower:
  #   container_name: watchtower
  #   hostname: watchtower
  #   restart: on-failure:5
  #   image: v2tec/watchtower
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #   command: --schedule "0 0 4 * * *" --cleanup

######### SMART HOME APPS ##########

# Home Assistant - Smart Home Hub
  # homeassistant:
  #   container_name: homeassistant
  #   hostname: hass
  #   restart: on-failure:5
  #   image: homeassistant/home-assistant
  #   devices:
  #     - /dev/ttyUSB0:/dev/ttyUSB0
  #     - /dev/ttyUSB1:/dev/ttyUSB1
  #     - /dev/ttyACM0:/dev/ttyACM0
  #   volumes:
  #     - ${USERDIR}/docker/homeassistant:/config
  #     - /etc/localtime:/etc/localtime:ro
  #     - ${USERDIR}/docker/shared:/shared
  #   ports:
  #     - "8123:8123"
  #   privileged: true
  #   environment:
  #     - PUID=${PUID}
  #     - PGID=${PGID}
  #     - TZ=${TZ}

######### DOWNLOADERS ##########

# Transmission with VPN – Bittorrent Downloader
  # transmission-vpn:
  #   container_name: transmission-vpn
  #   hostname: transmission
  #   image: haugene/transmission-openvpn
  #   cap_add:
  #     - NET_ADMIN
  #   devices:
  #     - /dev/net/tun
  #   restart: on-failure:5
  #   ports:
  #   - "9091:9091"
  #   dns:
  #     - 1.1.1.1
  #     - 1.0.0.1
  #   volumes:
  #     - /etc/localtime:/etc/localtime:ro
  #     - ${USERDIR}/docker/transmission-vpn:/data
  #     - ${USERDIR}/docker/shared:/shared
  #     - ${USERDIR}/Downloads:/data/watch
  #     - ${USERDIR}/Downloads/completed:/data/completed
  #     - ${USERDIR}/Downloads/incomplete:/data/incomplete
  #   environment:
  #     - OPENVPN_PROVIDER=IPVANISH
  #     - OPENVPN_USERNAME=ipvanish_username
  #     - OPENVPN_PASSWORD=ipvanish_password
  #     - OPENVPN_CONFIG="YYYYYYYYYYY"
  #     - OPENVPN_OPTS=--inactive 3600 --ping 10 --ping-exit 60
  #     - LOCAL_NETWORK=192.168.1.0/24
  #     - PUID=${PUID}
  #     - PGID=${PGID}
  #     - TZ=${TZ}
  #     - TRANSMISSION_RPC_AUTHENTICATION_REQUIRED=true
  #     - TRANSMISSION_RPC_HOST_WHITELIST="127.0.0.1,192.168.*.*"
  #     - TRANSMISSION_RPC_PASSWORD=${TRANSMISSION_RPC_PASSWORD}
  #     - TRANSMISSION_RPC_USERNAME=${TRANSMISSION_RPC_USERNAME}
  #     - TRANSMISSION_UMASK=002
  #     - TRANSMISSION_RATIO_LIMIT=0.01
  #     - TRANSMISSION_RATIO_LIMIT_ENABLED=true
  #     - TRANSMISSION_ALT_SPEED_DOWN=2000
  #     - TRANSMISSION_ALT_SPEED_ENABLED=true
  #     - TRANSMISSION_ALT_SPEED_UP=15
  #     - TRANSMISSION_SPEED_LIMIT_DOWN=6000
  #     - TRANSMISSION_SPEED_LIMIT_DOWN_ENABLED=true
  #     - TRANSMISSION_SPEED_LIMIT_UP=30
  #     - TRANSMISSION_SPEED_LIMIT_UP_ENABLED=true
  #     - TRANSMISSION_INCOMPLETE_DIR=/downloads/incomplete
  #     - TRANSMISSION_INCOMPLETE_DIR_ENABLED=true
  #     - TRANSMISSION_WATCH_DIR=/downloads
  #     - TRANSMISSION_WATCH_DIR_ENABLED=true
  #     - TRANSMISSION_DOWNLOAD_DIR=/downloads/completed

  transmission:
    image: linuxserver/transmission
    container_name: transmission
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      TZ: ${TZ}
      TRANSMISSION_WEB_HOME: /combustion-release/
      USER: ${ADMIN_USERNAME}
      PASS: ${ADMIN_PASSWORD}
      VIRTUAL_HOST: trans.${VIRTUAL_HOST}
      LETSENCRYPT_HOST: trans.${VIRTUAL_HOST}
      LETSENCRYPT_EMAIL: ${LETSENCRYPT_EMAIL}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${USERDIR}/transmission/config:/config
      - ${USERDIR}/transmission/watch:/data/watch
      - ${USERDIR}/transmission/downloads:/downloads
    ports:
      - 9091:9091
      - 51413:51413
      - 51413:51413/udp
    restart: on-failure:5


# qBittorrent without VPN – Bittorrent Downloader (Alternative)
  # qbittorrent:
  #   image: "linuxserver/qbittorrent"
  #   hostname: qbittorrent
  #   container_name: "qbittorrent"
  #   volumes:
  #     - ${USERDIR}/docker/qbittorrent:/config
  #     - ${USERDIR}/Downloads/completed:/downloads
  #     - ${USERDIR}/docker/shared:/shared
  #   ports:
  #     - "9997:9997"
  #     - "6881:6881"
  #     - "6881:6881/udp"
  #   restart: on-failure:5
  #   environment:
  #     - PUID=${PUID}
  #     - PGID=${PGID}
  #     - TZ=${TZ}
  #     - UMASK_SET=002
  #     - WEBUI_PORT=9997
  #     - VIRTUAL_HOST= \
  #     - LETSENCRYPT_HOST= \
  #     - LETSENCRYPT_EMAIL=somename@email.com \
  #     - LETSENCRYPT_TEST="true"

# SABnzbd – Usenet (NZB) Downloader
  # sabnzbd:
  #   image: "linuxserver/sabnzbd"
  #   hostname: sabnzbd
  #   container_name: "sabnzbd"
  #   volumes:
  #     - ${USERDIR}/docker/sabnzbd:/config
  #     - ${USERDIR}/Downloads/completed:/downloads
  #     - ${USERDIR}/Downloads/incomplete:/incomplete-downloads
  #     - ${USERDIR}/docker/shared:/shared
  #   ports:
  #       - "8080:8080"
  #   restart: on-failure:5
  #   environment:
  #     - PUID=${PUID}
  #     - PGID=${PGID}
  #     - TZ=${TZ}

# NZBGet – Usenet (NZB) Downloader (Alternative)
  # nzbget:
  #   image: "linuxserver/nzbget"
  #   hostname: nzbget
  #   container_name: "nzbget"
  #   volumes:
  #     - ${USERDIR}/docker/sabnzbd:/config
  #     - ${USERDIR}/Downloads:/downloads
  #     - ${USERDIR}/Downloads/incomplete:/incomplete-downloads
  #     - ${USERDIR}/docker/shared:/shared
  #   ports:
  #     - "6789:6789"
  #   restart: on-failure:5
  #   environment:
  #     - PUID=${PUID}
  #     - PGID=${PGID}
  #     - TZ=${TZ}

######### PERSONAL VIDEO RECORDERS ##########

# Radarr – Movie Download and Management
  radarr:
    image: "linuxserver/radarr"
    hostname: radarr
    container_name: "radarr"
    volumes:
      - ${USERDIR:-./radarr}/radarr:/config
      - ${USERDIR:-./radarr/downloads/completed}/radarr/downloads/completed:/downloads
      - ${USERDIR:-./radarr/media/movies}/radarr/media/movies:/movies
      - ${USERDIR:-./radarr/shared}/radarr/shared:/shared
      - "/etc/localtime:/etc/localtime:ro"
    ports:
      - "7878:7878"
    restart: on-failure:5
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      TZ: ${TZ}
      VIRTUAL_HOST: radarr.${VIRTUAL_HOST}
      LETSENCRYPT_HOST: radarr.${VIRTUAL_HOST}
      LETSENCRYPT_EMAIL: ${LETSENCRYPT_EMAIL}
      LETSENCRYPT_TEST: "true"

# CouchPotato – Movie Download and Management (Alternative)
  # couchpotato:
  #   image: "linuxserver/couchpotato"
  #   hostname: couchpotato
  #   container_name: "couchpotato"
  #   volumes:
  #     - ${USERDIR}/couchpotato:/config
  #     - ${USERDIR}/couchpotato/downloads:/downloads
  #     - ${USERDIR}/couchpotato/movies:/movies
  #     - ${USERDIR}/couchpotato/shared:/shared
  #   ports:
  #     - "5050:5050"
  #   restart: on-failure:5
  #   environment:
  #     PUID: ${PUID}
  #     PGID: ${PGID}
  #     UMASK_SET: 002
  #     TZ: ${TZ}
  #     VIRTUAL_HOST: \
  #     LETSENCRYPT_HOST: \
  #     LETSENCRYPT_EMAIL: somename@email.com \
  #     LETSENCRYPT_TEST: "true"

# Sonarr – TV Show Download and Management
  sonarr:
    image: "linuxserver/sonarr"
    hostname: sonarr
    container_name: "sonarr"
    volumes:
      - ${USERDIR}/sonarr:/config
      - ${USERDIR}/sonarr/downloads:/downloads
      - ${USERDIR}/sonarr/tv:/tv
      - "/etc/localtime:/etc/localtime:ro"
      - ${USERDIR}/sonarr/shared:/shared
    ports:
        - "8989:8989"
    restart: on-failure:5
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      TZ: ${TZ}
      VIRTUAL_HOST: sonarr.${VIRTUAL_HOST}
      LETSENCRYPT_HOST: sonarr.${VIRTUAL_HOST}
      LETSENCRYPT_EMAIL: ${LETSENCRYPT_EMAIL}
      LETSENCRYPT_TEST: "true"

#LIDARR - Music Download and Management
  lidarr:
    image: "linuxserver/lidarr"
    hostname: lidarr
    container_name: "lidarr"
    volumes:
      - ${USERDIR}/lidarr:/config
      - ${USERDIR}/lidarr/downloads:/downloads
      - ${USERDIR}/lidarr/music:/music
      - "/etc/localtime:/etc/localtime:ro"
      - ${USERDIR}/lidarr/shared:/shared
    ports:
      - "8686:8686"
    restart: on-failure:5
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      TZ: ${TZ}
      VIRTUAL_HOST: lidarr.${VIRTUAL_HOST}
      LETSENCRYPT_HOST: lidarr.${VIRTUAL_HOST}
      LETSENCRYPT_EMAIL: ${LETSENCRYPT_EMAIL}
      LETSENCRYPT_TEST: "true"

# SickRage – TV Show Download and Management (Alternative)
  # sickrage:
  #   image: "linuxserver/sickrage"
  #   hostname: sickrage
  #   container_name: "sickrage"
  #   volumes:
  #     - ${USERDIR}/docker/sickrage:/config
  #     - ${USERDIR}/Downloads/completed:/downloads
  #     - ${USERDIR}/media/tvshows:/tv
  #     - ${USERDIR}/docker/shared:/shared
  #   ports:
  #     - "8081:8081"
  #   restart: on-failure:5
  #   environment:
  #     - PUID=${PUID}
  #     - PGID=${PGID}
  #     - TZ=${TZ}

######### MEDIA SERVER APPS ##########

# Plex Media Server
  plexms:
    container_name: plexms
    hostname: plexms
    image: plexinc/pms-docker
    restart: on-failure:5
    volumes:
      - ${USERDIR}/plexms:/config
      - ${USERDIR}/plexms/transcode:/transcode
      - ${USERDIR}/plexms/media:/media
      - ${USERDIR}/plexms/shared:/shared
    ports:
      - "32400:32400/tcp"
      - "3005:3005/tcp"
      - "8324:8324/tcp"
      - "32469:32469/tcp"
      - "1900:1900/udp"
      - "32410:32410/udp"
      - "32412:32412/udp"
      - "32413:32413/udp"
      - "32414:32414/udp"
    environment:
      TZ: ${TZ}
      HOSTNAME: "plexms"
      PLEX_CLAIM: "claim-1fxVL2zQLYuzhbPT2qid"
      PLEX_UID: ${PUID}
      PLEX_GID: ${PGID}
      ADVERTISE_IP: "http://${PLEX_IP}:32400/"
      VIRTUAL_HOST: plex.${VIRTUAL_HOST}
      LETSENCRYPT_HOST: plex.${VIRTUAL_HOST}
      LETSENCRYPT_EMAIL: ${LETSENCRYPT_EMAIL}
      LETSENCRYPT_TEST: "true"


# Tautulli (aka PlexPy) – Monitoring Plex Usage
  # tautulli:
  #   container_name: tautulli
  #   hostname: tautulli
  #   restart: on-failure:5
  #   image: linuxserver/tautulli
  #   volumes:
  #     - ${USERDIR}/docker/tautulli/config:/config
  #     - ${USERDIR}/docker/tautulli/logs:/logs:ro
  #     - ${USERDIR}/docker/shared:/shared
  #   ports:
  #     - "8181:8181"
  #   environment:
  #     - PUID=${PUID}
  #     - PGID=${PGID}
  #     - TZ=${TZ}

# Ombi – Accept Requests for your Media Server
  ombi:
    container_name: ombi
    hostname: ombi
    restart: on-failure:5
    image: linuxserver/ombi
    volumes:
      - ${USERDIR}/ombi:/config
      - ${USERDIR}/ombi/shared:/shared
    ports:
      - "3579:3579"
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      TZ: ${TZ}
      VIRTUAL_HOST: ombi.${VIRTUAL_HOST}
      LETSENCRYPT_HOST: ombi.${VIRTUAL_HOST}
      LETSENCRYPT_EMAIL: ${LETSENCRYPT_EMAIL}
      LETSENCRYPT_TEST: "true"

######### SEARCHERS ##########

# NZBHydra – NZB Meta Search
  # hydra:
  #   image: "linuxserver/hydra"
  #   hostname: hydra
  #   container_name: "hydra"
  #   volumes:
  #     - ${USERDIR}/hydra:/config
  #     - ${USERDIR}/hydra/downloads:/downloads
  #     - ${USERDIR}/hydra/shared:/shared
  #   ports:
  #     - "5075:5075"
  #   restart: on-failure:5
  #   environment:
  #     PUID: ${PUID}
  #     PGID: ${PGID}
  #     TZ: ${TZ}
  #     VIRTUAL_HOST:  \
  #     LETSENCRYPT_HOST:  \
  #     LETSENCRYPT_EMAIL: somename@email.com \
  #     LETSENCRYPT_TEST: "true"

# Jackett – Torrent Proxy
  jackett:
    image: "linuxserver/jackett"
    hostname: jackett
    container_name: "jackett"
    volumes:
      - ${USERDIR}/jackett:/config
      - ${USERDIR}/jackett/downloads:/downloads
      - "/etc/localtime:/etc/localtime:ro"
      - ${USERDIR}/jackett/shared:/shared
    ports:
      - "9117:9117"
    restart: on-failure:5
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      TZ: ${TZ}
      VIRTUAL_HOST: jackett.${VIRTUAL_HOST}
      LETSENCRYPT_HOST: jackett.${VIRTUAL_HOST}
      LETSENCRYPT_EMAIL: ${LETSENCRYPT_EMAIL}
      LETSENCRYPT_TEST: "true"

######### UTILITIES ##########

# MariaDB – Database Server for your Apps
  # mariadb:
  #   image: "linuxserver/mariadb"
  #   container_name: "mariadb"
  #   hostname: mariadb
  #   volumes:
  #       - ${USERDIR}/docker/mariadb:/config
  #   ports:
  #     - target: 3306
  #       published: 3306
  #       protocol: tcp
  #       mode: host
  #   restart: on-failure:5
  #   environment:
  #     - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
  #     - PUID=${PUID}
  #     - PGID=${PGID}
  #     - TZ=${TZ}


  nextcloud:
    container_name: nextcloud
    image: nextcloud
    hostname: nextcloud
    restart: on-failure:5
    ports:
      - ${HTTP_PORT}:80
    depends_on:
      - db
      - redis
    links:
      - db
      - redis
    environment:
      NEXTCLOUD_ADMIN_USERNAME: ${ADMIN_USERNAME}
      NEXTCLOUD_ADMIN_PASSWORD: ${ADMIN_PASSWORD}
      NEXTCLOUD_TRUSTED_DOMAINS: cloud.${VIRTUAL_HOST}
      REDIS_HOST: redis
      POSTGRES_HOST: db
      POSTGRES_DB: nextcloud
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      VIRTUAL_HOST: cloud.${VIRTUAL_HOST}
      LETSENCRYPT_HOST: cloud.${VIRTUAL_HOST}
      LETSENCRYPT_EMAIL: ${LETSENCRYPT_EMAIL}
      LETSENCRYPT_TEST: "true"
    volumes:
      - ${USERDIR:-./html}/html:/var/www/html
  
  db:
    container_name: nextcloud_db
    image: postgres:12-alpine
    restart: on-failure:5
    volumes:
      - ${USERDIR:-./postgres/data}/postgres/data:/var/lib/postgresql/data
    environment:
      POSTGRES_HOST: db
      POSTGRES_DB: nextcloud
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}

  redis:
    container_name: nextcloud_redis
    image: redis:alpine
    restart: on-failure:5
    volumes:
      - ${USERDIR:-./redis}/redis:/var/lib/redis


# NextCloud – Your Own Cloud Storage
  # nextcloud:
  #   container_name: nextcloud
  #   hostname: nextcloud
  #   restart: on-failure:5
  #   image: linuxserver/nextcloud
  #   volumes:
  #     - ${USERDIR}/nextcloud:/config
  #     - ${USERDIR}/nextcloud/data:/data
  #     - ${USERDIR}/nextcloud/shared:/shared
  #   ports:
  #     - "9443:443"
  #   environment:
  #     PUID: ${PUID}
  #     PGID: ${PGID}
  #     VIRTUAL_HOST: \
  #     LETSENCRYPT_HOST: \
  #     LETSENCRYPT_EMAIL: somename@email.com \
  #     LETSENCRYPT_TEST: "true"

networks:
  default:
    external:
      name: webproxy
